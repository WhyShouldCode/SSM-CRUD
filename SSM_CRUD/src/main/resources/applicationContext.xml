<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/aop
         https://www.springframework.org/schema/aop/spring-aop.xsd 
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--用于加载Spring的配置文件-->
    <!--数据源，事务控制-->


    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <!--配置数据源-->
    <bean id="poolDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--配置扫描器-->
    <context:component-scan base-package="com.lin.study">
        <!--spring配置的扫描器不用再次扫描controller配置的扫描器-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--配置和MyBatis的整合-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置MyBatis的全局配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="dataSource" ref="poolDataSource"/>
        <!--指定mybaits的mapper文件位置-->
        <property name="mapperLocations" value="classpath:com/lin/dao/*.xml"/>
    </bean>

    <!--配置扫描器，将mybatis接口的实现类加入到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描所有的dao接口的实现，加入到ioc容器中-->
        <property name="basePackage" value="com.lin.study.dao"/>
    </bean>

    <!--事务控制配置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="poolDataSource"/>
    </bean>

    <!--开启基于注解的事务，或者使用xml配置形式的事务(必要的主要使用配置方式)-->
    <aop:config>
        <!--切入点表达式-->
        <aop:pointcut id="txPointCut" expression="execution(public * com.lin.study.service..*(..))"/>
        <!--配置事务增强-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"></aop:advisor>
    </aop:config>

    <!--配置增强事务，事务如何切入-->
   <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
        <!--所有方法都是事务方法-->
        <tx:method name="*"/>
        <!--以get开始的所有方法-->
        <tx:method name="get*" read-only="true"/>
    </tx:attributes>
   </tx:advice>
    <!--配置一个可以执行批量的sqlSession-->
    <bean id="sqlSessionBeanFactory" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>
</beans>